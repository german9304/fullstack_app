{"ast":null,"code":"var _jsxFileName = \"/frontend/pages/components/Books.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n *  Books component\n *\n *\n */\nimport gql from 'graphql-tag';\nimport Book from './Book';\nimport { useQuery } from '@apollo/react-hooks';\nconst QUERY_BOOKS = gql`\n  query QUERY_BOOKS {\n    books {\n      book_id\n      title\n      description\n      type\n      created\n      author {\n        author_id\n        name\n        email\n      }\n    }\n  }\n`;\n\nfunction Books() {\n  let {\n    loading,\n    data,\n    error\n  } = useQuery(QUERY_BOOKS);\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"loading...\");\n  if (error) throw Error(error);\n\n  if (data) {\n    console.log(data);\n  }\n\n  return __jsx(\"article\", {\n    className: \"books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Books\"), data.books.map(book => __jsx(Book, {\n    id: book.book_id,\n    data: book,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })));\n}\n\nexport default Books;","map":{"version":3,"sources":["/frontend/pages/components/Books.js"],"names":["gql","Book","useQuery","QUERY_BOOKS","Books","loading","data","error","Error","console","log","books","map","book","book_id"],"mappings":";;;;AAAA;;;;;AAMA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,MAAMC,WAAW,GAAGH,GAAI;;;;;;;;;;;;;;;CAAxB;;AAiBA,SAASI,KAAT,GAAiB;AACf,MAAI;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MAA2BL,QAAQ,CAACC,WAAD,CAAvC;AAEA,MAAIE,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIE,KAAJ,EAAW,MAAMC,KAAK,CAACD,KAAD,CAAX;;AAEX,MAAID,IAAJ,EAAU;AACRG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD;;AAED,SACE;AAAS,IAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGA,IAAI,CAACK,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAClB,MAAC,IAAD;AAAM,IAAA,EAAE,EAAEA,IAAI,CAACC,OAAf;AAAwB,IAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,CADF;AAQD;;AAED,eAAeT,KAAf","sourcesContent":["/**\n *  Books component\n *\n *\n */\n\nimport gql from 'graphql-tag';\nimport Book from './Book';\n\nimport { useQuery } from '@apollo/react-hooks';\n\nconst QUERY_BOOKS = gql`\n  query QUERY_BOOKS {\n    books {\n      book_id\n      title\n      description\n      type\n      created\n      author {\n        author_id\n        name\n        email\n      }\n    }\n  }\n`;\n\nfunction Books() {\n  let { loading, data, error } = useQuery(QUERY_BOOKS);\n\n  if (loading) return <p>loading...</p>;\n  if (error) throw Error(error);\n\n  if (data) {\n    console.log(data);\n  }\n\n  return (\n    <article className='books'>\n      <h1>Books</h1>\n      {data.books.map(book => (\n        <Book id={book.book_id} data={book} />\n      ))}\n    </article>\n  );\n}\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}