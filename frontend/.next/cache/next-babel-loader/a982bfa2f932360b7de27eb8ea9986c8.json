{"ast":null,"code":"import { useState } from 'react'; // Custom hook to set value for input elements\n\nfunction useInputValue(initValue) {\n  const {\n    0: value,\n    1: setValue\n  } = useState(initValue);\n\n  const handleValue = e => setValue(e.target.value);\n\n  return {\n    handleValue,\n    value\n  };\n}\n\nexport { useInputValue };","map":{"version":3,"sources":["/frontend/lib/CustomHook.js"],"names":["useState","useInputValue","initValue","value","setValue","handleValue","e","target"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,SAASC,aAAT,CAAuBC,SAAvB,EAAkC;AAChC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAACE,SAAD,CAAlC;;AAEA,QAAMG,WAAW,GAAGC,CAAC,IAAIF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAjC;;AAEA,SAAO;AACLE,IAAAA,WADK;AAELF,IAAAA;AAFK,GAAP;AAID;;AAED,SAASF,aAAT","sourcesContent":["import { useState } from 'react';\n\n// Custom hook to set value for input elements\nfunction useInputValue(initValue) {\n  const [value, setValue] = useState(initValue);\n\n  const handleValue = e => setValue(e.target.value);\n\n  return {\n    handleValue,\n    value\n  };\n}\n\nexport { useInputValue };\n"]},"metadata":{},"sourceType":"module"}