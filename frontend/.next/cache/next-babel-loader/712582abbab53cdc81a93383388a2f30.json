{"ast":null,"code":"import withApollo from 'next-with-apollo';\nimport ApolloClient, { InMemoryCache } from 'apollo-boost';\n\nif (window) {\n  console.log('this is window', window);\n} else {\n  console.log('window does not exists');\n}\n\nvar GRAPHQL_URL = 'http://localhost:5000/';\n\nfunction client(_ref) {\n  var headers = _ref.headers,\n      initialState = _ref.initialState;\n  return new ApolloClient({\n    request: function request(operation) {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include'\n        },\n        headers: headers\n      });\n    },\n    uri: GRAPHQL_URL,\n    cache: new InMemoryCache().restore(initialState || {})\n  });\n}\n\nexport default withApollo(client);","map":{"version":3,"sources":["/frontend/lib/withApollo.js"],"names":["withApollo","ApolloClient","InMemoryCache","window","console","log","GRAPHQL_URL","client","headers","initialState","request","operation","setContext","fetchOptions","credentials","uri","cache","restore"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,IAAuBC,aAAvB,QAA4C,cAA5C;;AAEA,IAAIC,MAAJ,EAAY;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,MAA9B;AACD,CAFD,MAEO;AACLC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD;;AACD,IAAMC,WAAW,GAAG,wBAApB;;AAEA,SAASC,MAAT,OAA2C;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,MAAhBC,YAAgB,QAAhBA,YAAgB;AACzC,SAAO,IAAIR,YAAJ,CAAiB;AACtBS,IAAAA,OAAO,EAAE,iBAAAC,SAAS,EAAI;AACpBA,MAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBC,QAAAA,YAAY,EAAE;AACZC,UAAAA,WAAW,EAAE;AADD,SADK;AAInBN,QAAAA,OAAO,EAAPA;AAJmB,OAArB;AAMD,KARqB;AAStBO,IAAAA,GAAG,EAAET,WATiB;AAUtBU,IAAAA,KAAK,EAAE,IAAId,aAAJ,GAAoBe,OAApB,CAA4BR,YAAY,IAAI,EAA5C;AAVe,GAAjB,CAAP;AAYD;;AACD,eAAeT,UAAU,CAACO,MAAD,CAAzB","sourcesContent":["import withApollo from 'next-with-apollo';\nimport ApolloClient, { InMemoryCache } from 'apollo-boost';\n\nif (window) {\n  console.log('this is window', window);\n} else {\n  console.log('window does not exists');\n}\nconst GRAPHQL_URL = 'http://localhost:5000/';\n\nfunction client({ headers, initialState }) {\n  return new ApolloClient({\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include'\n        },\n        headers\n      });\n    },\n    uri: GRAPHQL_URL,\n    cache: new InMemoryCache().restore(initialState || {})\n  });\n}\nexport default withApollo(client);\n"]},"metadata":{},"sourceType":"module"}