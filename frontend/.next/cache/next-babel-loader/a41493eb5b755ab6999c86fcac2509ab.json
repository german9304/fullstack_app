{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/frontend/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query Books {\\n      books {\\n        type\\n        title\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// Default imports\nimport Layout from './components/Layout';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useState, createContext } from 'react';\n\nfunction App() {\n  var QUERY = gql(_templateObject());\n\n  var _useQuery = useQuery(QUERY),\n      data = _useQuery.data,\n      error = _useQuery.error;\n\n  if (data) {\n    console.log(data);\n  }\n\n  if (error) {\n    console.log(err);\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"layout\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/frontend/pages/index.js"],"names":["Layout","gql","useQuery","useState","createContext","App","QUERY","data","error","console","log","err"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,OAAxC;;AAEA,SAASC,GAAT,GAAe;AACb,MAAMC,KAAK,GAAGL,GAAH,mBAAX;;AADa,kBAUWC,QAAQ,CAACI,KAAD,CAVnB;AAAA,MAULC,IAVK,aAULA,IAVK;AAAA,MAUCC,KAVD,aAUCA,KAVD;;AAWb,MAAID,IAAJ,EAAU;AACRE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD;;AAED,MAAIC,KAAJ,EAAW;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;;AACD,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF;AAKD;;AAED,eAAeN,GAAf","sourcesContent":["// Default imports\nimport Layout from './components/Layout';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { useState, createContext } from 'react';\n\nfunction App() {\n  const QUERY = gql`\n    query Books {\n      books {\n        type\n        title\n      }\n    }\n  `;\n\n  const { data, error } = useQuery(QUERY);\n  if (data) {\n    console.log(data);\n  }\n\n  if (error) {\n    console.log(err);\n  }\n  return (\n    <Layout>\n      <p>layout</p>\n    </Layout>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}