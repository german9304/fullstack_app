{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/frontend/pages/components/Books.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query QUERY_BOOKS {\\n    books {\\n      book_id\\n      title\\n      description\\n      type\\n      created\\n      author {\\n        author_id\\n        name\\n        email\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/**\n *  Books component\n *\n *\n */\nimport gql from 'graphql-tag';\nimport Book from './Book';\nimport { useQuery } from '@apollo/react-hooks';\nexport var GET_BOOK_QUERY = gql(_templateObject());\n\nfunction Books() {\n  var _useQuery = useQuery(GET_BOOK_QUERY),\n      loading = _useQuery.loading,\n      data = _useQuery.data,\n      error = _useQuery.error;\n\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"loading...\");\n  if (error) throw Error(error);\n  return __jsx(\"article\", {\n    className: \"books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Books\"), data.books.map(function (book) {\n    console.log(book.book_id);\n    return __jsx(Book, {\n      key: book.book_id,\n      data: book,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }));\n}\n\nexport default Books;","map":{"version":3,"sources":["/frontend/pages/components/Books.js"],"names":["gql","Book","useQuery","GET_BOOK_QUERY","Books","loading","data","error","Error","books","map","book","console","log","book_id"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;AAMA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAO,IAAMC,cAAc,GAAGH,GAAH,mBAApB;;AAiBP,SAASI,KAAT,GAAiB;AAAA,kBACgBF,QAAQ,CAACC,cAAD,CADxB;AAAA,MACTE,OADS,aACTA,OADS;AAAA,MACAC,IADA,aACAA,IADA;AAAA,MACMC,KADN,aACMA,KADN;;AAGf,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIE,KAAJ,EAAW,MAAMC,KAAK,CAACD,KAAD,CAAX;AAEX,SACE;AAAS,IAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGD,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI,EAAI;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAjB;AACA,WAAO,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEH,IAAI,CAACG,OAAhB;AAAyB,MAAA,IAAI,EAAEH,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAHA,CAFH,CADF;AASD;;AAED,eAAeP,KAAf","sourcesContent":["/**\n *  Books component\n *\n *\n */\n\nimport gql from 'graphql-tag';\nimport Book from './Book';\n\nimport { useQuery } from '@apollo/react-hooks';\n\nexport const GET_BOOK_QUERY = gql`\n  query QUERY_BOOKS {\n    books {\n      book_id\n      title\n      description\n      type\n      created\n      author {\n        author_id\n        name\n        email\n      }\n    }\n  }\n`;\n\nfunction Books() {\n  let { loading, data, error } = useQuery(GET_BOOK_QUERY);\n\n  if (loading) return <p>loading...</p>;\n  if (error) throw Error(error);\n\n  return (\n    <article className='books'>\n      <h1>Books</h1>\n      {data.books.map(book => {\n        console.log(book.book_id);\n        return <Book key={book.book_id} data={book} />;\n      })}\n    </article>\n  );\n}\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}