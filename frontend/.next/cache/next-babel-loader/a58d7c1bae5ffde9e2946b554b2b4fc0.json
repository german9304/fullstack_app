{"ast":null,"code":"var _jsxFileName = \"/frontend/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport { useState, createContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nconst StyledHello = styled.p.withConfig({\n  displayName: \"pages__StyledHello\",\n  componentId: \"lgoza8-0\"\n})([\"color:red;\"]);\n\nfunction App() {\n  const QUERY = gql`\n    query Authors {\n      authors {\n        email\n        name\n      }\n    }\n  `;\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY);\n\n  if (data) {\n    console.log(data);\n  }\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(StyledHello, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \" hello \"));\n}\n\nexport default App;","map":{"version":3,"sources":["/frontend/pages/index.js"],"names":["styled","useState","createContext","useQuery","gql","StyledHello","p","App","QUERY","data","loading","error","console","log"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,OAAxC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,WAAW,GAAGL,MAAM,CAACM,CAAV;AAAA;AAAA;AAAA,kBAAjB;;AAGA,SAASC,GAAT,GAAe;AACb,QAAMC,KAAK,GAAGJ,GAAI;;;;;;;GAAlB;AASA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BR,QAAQ,CAACK,KAAD,CAAzC;;AAEA,MAAIC,IAAJ,EAAU;AACRG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD;;AACD,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF;AAKD;;AAED,eAAeF,GAAf","sourcesContent":["import styled from 'styled-components';\n\nimport { useState, createContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nconst StyledHello = styled.p`\n  color: red;\n`;\nfunction App() {\n  const QUERY = gql`\n    query Authors {\n      authors {\n        email\n        name\n      }\n    }\n  `;\n\n  const { data, loading, error } = useQuery(QUERY);\n\n  if (data) {\n    console.log(data);\n  }\n  return (\n    <div className='container'>\n      <StyledHello> hello </StyledHello>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}