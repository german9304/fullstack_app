{"ast":null,"code":"import withApollo from 'next-with-apollo';\nimport ApolloClient, { InMemoryCache, HttpLink } from 'apollo-boost';\nvar graph_url;\n\nif (window === 'undefined') {\n  graph_url = 'http://backend:5000/';\n} else {\n  graph_url = 'http://localhost:5000/';\n}\n\nfunction client(_ref) {\n  var headers = _ref.headers,\n      initialState = _ref.initialState;\n  return new ApolloClient({\n    request: function request(operation) {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include'\n        },\n        headers: headers\n      });\n    },\n    uri: graph_url,\n    cache: new InMemoryCache().restore(initialState || {})\n  });\n}\n\nexport default withApollo(client);","map":{"version":3,"sources":["/frontend/lib/withApollo.js"],"names":["withApollo","ApolloClient","InMemoryCache","HttpLink","graph_url","window","client","headers","initialState","request","operation","setContext","fetchOptions","credentials","uri","cache","restore"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,IAAuBC,aAAvB,EAAsCC,QAAtC,QAAsD,cAAtD;AAEA,IAAIC,SAAJ;;AAEA,IAAIC,MAAM,KAAK,WAAf,EAA4B;AAC1BD,EAAAA,SAAS,GAAG,sBAAZ;AACD,CAFD,MAEO;AACLA,EAAAA,SAAS,GAAG,wBAAZ;AACD;;AAED,SAASE,MAAT,OAA2C;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,MAAhBC,YAAgB,QAAhBA,YAAgB;AACzC,SAAO,IAAIP,YAAJ,CAAiB;AACtBQ,IAAAA,OAAO,EAAE,iBAAAC,SAAS,EAAI;AACpBA,MAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBC,QAAAA,YAAY,EAAE;AACZC,UAAAA,WAAW,EAAE;AADD,SADK;AAInBN,QAAAA,OAAO,EAAPA;AAJmB,OAArB;AAMD,KARqB;AAStBO,IAAAA,GAAG,EAAEV,SATiB;AAUtBW,IAAAA,KAAK,EAAE,IAAIb,aAAJ,GAAoBc,OAApB,CAA4BR,YAAY,IAAI,EAA5C;AAVe,GAAjB,CAAP;AAYD;;AACD,eAAeR,UAAU,CAACM,MAAD,CAAzB","sourcesContent":["import withApollo from 'next-with-apollo';\nimport ApolloClient, { InMemoryCache, HttpLink } from 'apollo-boost';\n\nlet graph_url;\n\nif (window === 'undefined') {\n  graph_url = 'http://backend:5000/';\n} else {\n  graph_url = 'http://localhost:5000/';\n}\n\nfunction client({ headers, initialState }) {\n  return new ApolloClient({\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include'\n        },\n        headers\n      });\n    },\n    uri: graph_url,\n    cache: new InMemoryCache().restore(initialState || {})\n  });\n}\nexport default withApollo(client);\n"]},"metadata":{},"sourceType":"module"}