{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/frontend/pages/signin.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\\n    signin(email: $email, password: $password) {\\n      author_id\\n      name\\n      email\\n      password\\n      created\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from 'styled-components';\nimport WithLayout from './components/Layout';\nimport FormStyles from './components/styles/FormStyles';\nimport StyledButton from './components/styles/ButtonStyles';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useState } from 'react';\nimport { useInputValue } from '../lib/CustomHook';\nexport var SIGNIN_MUTATION = gql(_templateObject());\n\nfunction Signin() {\n  var _useMutation = useMutation(SIGNIN_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signinMutation = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      error = _useMutation2$.error,\n      loading = _useMutation2$.loading;\n\n  var email = useInputValue('');\n  var password = useInputValue('');\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"loading...\");\n  if (error) throw Error(error);\n\n  if (data) {\n    console.log(data);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault(); // signinMutation({\n    //   variables: {\n    //     email: email.value,\n    //     password: password.value\n    //   }\n    // });\n  }\n\n  return __jsx(\"div\", {\n    className: \"auth signin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Welcome Back, Please Sign in\"), __jsx(FormStyles, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"form form-formgroup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \" Email\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    value: email.value,\n    onChange: email.handleValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"form form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \" Password\"), __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password.value,\n    onChange: password.handleValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"form-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(StyledButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Sign in\"))));\n}\n\nexport default WithLayout(Signin);","map":{"version":3,"sources":["/frontend/pages/signin.js"],"names":["styled","WithLayout","FormStyles","StyledButton","gql","useMutation","useState","useInputValue","SIGNIN_MUTATION","Signin","signinMutation","data","error","loading","email","password","Error","console","log","handleSubmit","e","preventDefault","value","handleValue"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,OAAO,IAAMC,eAAe,GAAGJ,GAAH,mBAArB;;AAYP,SAASK,MAAT,GAAkB;AAAA,qBACmCJ,WAAW,CAC5DG,eAD4D,CAD9C;AAAA;AAAA,MACTE,cADS;AAAA;AAAA,MACSC,IADT,kBACSA,IADT;AAAA,MACeC,KADf,kBACeA,KADf;AAAA,MACsBC,OADtB,kBACsBA,OADtB;;AAIhB,MAAMC,KAAK,GAAGP,aAAa,CAAC,EAAD,CAA3B;AACA,MAAMQ,QAAQ,GAAGR,aAAa,CAAC,EAAD,CAA9B;AAEA,MAAIM,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAID,KAAJ,EAAW,MAAMI,KAAK,CAACJ,KAAD,CAAX;;AAEX,MAAID,IAAJ,EAAU;AACRM,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACD;;AAED,WAASQ,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF,GADuB,CAEvB;AACA;AACA;AACA;AACA;AACA;AACD;;AACD,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE,MAAC,UAAD;AAAY,IAAA,QAAQ,EAAEF,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEL,KAAK,CAACQ,KAHf;AAIE,IAAA,QAAQ,EAAER,KAAK,CAACS,WAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAUE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAER,QAAQ,CAACO,KAHlB;AAIE,IAAA,QAAQ,EAAEP,QAAQ,CAACQ,WAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVF,EAmBE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAnBF,CAFF,CADF;AA4BD;;AAED,eAAetB,UAAU,CAACQ,MAAD,CAAzB","sourcesContent":["import styled from 'styled-components';\nimport WithLayout from './components/Layout';\nimport FormStyles from './components/styles/FormStyles';\nimport StyledButton from './components/styles/ButtonStyles';\nimport gql from 'graphql-tag';\n\nimport { useMutation } from '@apollo/react-hooks';\nimport { useState } from 'react';\nimport { useInputValue } from '../lib/CustomHook';\n\nexport const SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    signin(email: $email, password: $password) {\n      author_id\n      name\n      email\n      password\n      created\n    }\n  }\n`;\n\nfunction Signin() {\n  const [signinMutation, { data, error, loading }] = useMutation(\n    SIGNIN_MUTATION\n  );\n  const email = useInputValue('');\n  const password = useInputValue('');\n\n  if (loading) return <p>loading...</p>;\n  if (error) throw Error(error);\n\n  if (data) {\n    console.log(data);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    // signinMutation({\n    //   variables: {\n    //     email: email.value,\n    //     password: password.value\n    //   }\n    // });\n  }\n  return (\n    <div className='auth signin'>\n      <h1>Welcome Back, Please Sign in</h1>\n      <FormStyles onSubmit={handleSubmit}>\n        <div className='form form-formgroup'>\n          <label htmlFor='email'> Email</label>\n          <input\n            type='text'\n            name='email'\n            value={email.value}\n            onChange={email.handleValue}\n          />\n        </div>\n        <div className='form form-group'>\n          <label htmlFor='password'> Password</label>\n          <input\n            type='password'\n            name='password'\n            value={password.value}\n            onChange={password.handleValue}\n          />\n        </div>\n        <div className='form-btn'>\n          <StyledButton type='submit'>Sign in</StyledButton>\n        </div>\n      </FormStyles>\n    </div>\n  );\n}\n\nexport default WithLayout(Signin);\n"]},"metadata":{},"sourceType":"module"}